with(births, hist(weight[Habit == "NonSmoker"],
col = "blue", add = TRUE,
breaks = 20))
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "red",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "blue", add = TRUE,
breaks = 20, density = 30))
length(births$Habit == "NonSmoker")
length(births$Habit == "Smoker")
length(births$Habit)
length(births$Habit[births$Habit == "Smoker"])
length(births$Habit[births$Habit == "NonSmoker"])
length(births$Habit[births$Habit == "Smoker"])
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "red",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "blue", add = TRUE,
breaks = 200, density = 30))
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "red",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "blue", add = TRUE,
breaks = 20, density = 30))
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "red",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "blue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "yellow",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "blue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
legend("topleft", c("Smoker, NonSmoker"),
density = c(20, 30),
fill = c("yellow", "blue"),
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
legend("topleft", c("Smoker, NonSmoker"),
density = c(20, 30),
fill = c("tomato2", "steelblue"),
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
legend("topleft", c("Smoker", "NonSmoker"),
density = c(20, 30),
fill = c("tomato2", "steelblue"),
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
legend("topleft", c("Smoker", "NonSmoker"),
density = c(20, 30),
fill = c("tomato2", "steelblue"),
cex = 0.60
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
legend("topleft", c("Smoker", "NonSmoker"),
density = c(40, 50),
fill = c("tomato2", "steelblue"),
cex = 0.60
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
lines(density(births$weight), lwd = 2, col = "purple")
abline(v = median(births$weight), lwd = 2, col = "blue")
text(90, 0.020, "median ->")
legend("topleft", c("Smoker", "NonSmoker"),
density = c(40, 50),
fill = c("tomato2", "steelblue"),
cex = 0.60
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
lines(density(births$weight), lwd = 2, col = "purple")
abline(v = median(births$weight), lwd = 2, col = "blue")
text(110, 0.020, "median ->")
legend("topleft", c("Smoker", "NonSmoker"),
density = c(40, 50),
fill = c("tomato2", "steelblue"),
cex = 0.60
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
lines(density(births$weight), lwd = 2, col = "purple")
abline(v = median(births$weight), lwd = 2, col = "blue")
text(100, 0.020, "median ->")
legend("topleft", c("Smoker", "NonSmoker"),
density = c(40, 50),
fill = c("tomato2", "steelblue"),
cex = 0.60
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
lines(density(births$weight), lwd = 2, col = "tan1")
abline(v = median(births$weight), lwd = 2, col = "slategray2")
text(100, 0.020, "median ->")
legend("topleft", c("Smoker", "NonSmoker"),
density = c(40, 50),
fill = c("tomato2", "steelblue"),
cex = 0.60
)
with(births, hist(weight[Habit == "Smoker"],
prob = TRUE, density = 20, col = "tomato2",
xlab = "Weight in pounds",
main = "Histogram of Smokers vs Nonsmokers"))
with(births, hist(weight[Habit == "NonSmoker"],
col = "steelblue", add = TRUE, prob = TRUE,
breaks = 20, density = 30))
lines(density(births$weight), lwd = 2, col = "tan1")
abline(v = median(births$weight), lwd = 2, col = "yellowgreen")
text(100, 0.020, "median ->")
legend("topleft", c("Smoker", "NonSmoker"),
density = c(40, 50),
fill = c("tomato2", "steelblue"),
cex = 0.60
)
head(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, list(iris$Species,iris[,1:4]), mean)
tapply(iris$Sepal.Length, list(iris$Species,iris[,1), mean)
tapply(iris$Sepal.Length, list(iris$Species,iris[,1]), mean)
f <- iris[,1]
f <- factor(f)
mode(iris[,1])
class(iris[,1])
names(iris[,1])
f <- iris[,1, drop=FALSE]
f
names(f)
tapply(iris$Petal.Length, list(iris$Species, f), mean)
iris$Petal.Length[iris$Species == "setosa"]
mean(iris$Petal.Length[iris$Species == "setosa"])
apply(iris[,1:4],2, mean)
sapply(iris[,1:4], mean)
iris$Sepal.Length["setosa"]
iris$Sepal.Length["setosa",]
iris$Sepal.Length[iris$Species == "setosa",]
iris$Sepal.Length
iris[iris$Species == "setosa",]
mean(iris[iris$Species == "setosa",])
mean(iris[iris$Species == "setosa",], na.rm=TRUE)
setosa <- iris[iris$Species == "setosa",]
setosa
apply(setosa[,1:4], 2,mean)
setosa_mean <- apply(setosa[,1:4],2,mean)
setosa_mean
names(setosa_mean)
levels(iris$species)
levels(iris$Species)
versicolor_mean <- apply(versicolor[, 1:4], 2, mean)
versicolor_mean <- apply(iris[iris$Species == "versicolor", 1:4], 2, mean)
versicolor_mean
virginica <- apply(iris[iris$Species == "virginica", 1:4], 2, mean)
virginica_mean <- apply(iris[iris$Species == "virginica", 1:4], 2, mean)
rm(virginica)
total <- rbind(setosa_mean, versicolor_mean, virginica_mean)
total
iris$Species[levels(iris$Species),]
iris$Species$setosa
iris[iris[,1:4] %in% levels(iris$Species)]
iris[iris[,1:4] %in% levels(iris$Species),]
iris[iris[,1:4] %in% c("setosa", "versicolor"),]
sqrt(4)
e
exp(1)
-digamma(1)
sqrt(1+0.5*exp(-0.5))
calc_3 <- function(x,y) {
sqrt(1 + x*exp(-y))
}
?seq
seq(0,1,0.25)
seq(0,1,0.25)[-1]
seq(0,1,0.25)[-1][3]
seq(0,1,0.25)[-1][-3]
seq(0,1,0.25)[-1]
vec <- seq(0,1, 1/4)
calc_3(vec[1], vec[3])
vec <- seq(0,1, 1/4)[-1]
calc_3(vec[1], vec[3])
vec
vec <- vec[-2][-4]
vec
vec <- seq(0,1, 1/4)[-1]
vec
vec <- vec[-2][-3]
vec
vec <- seq(0,1, 1/4)[-1]
vec <- vec[-2][-3]
total <- 1
for (i in seq_along(vec)){
for (j in seq_along(vec)){
total <- sum(total, calc_3(vec[i], vec[j]))
}
}
total
vec <- seq(0,1, 1/4)[-1]
vec <- vec[-2][-3]
total <- 0
for (i in seq_along(vec)){
for (j in seq_along(vec)){
total <- sum(total, calc_3(vec[i], vec[j]))
}
}
total
vec <- seq(0,1, 1/4)[-1]
vec <- vec[-2][-3]
do_it <- function(vec){
total <- 0
for (i in seq_along(vec)){
for (j in seq_along(vec)){
total <- sum(total, calc_3(vec[i], vec[j]))
message(total)
}
}
total
}
do_it(vec)
vec
calc_3(0.25, 0.25)
calc_3(0.25, 0.75)
calc_3(0.5, 0.5)
calc_3(0.75, 0.75)
calc_3 <- function(x,y) {
sqrt(x*exp(-y))
}
calc_3(0.75, 0.75)
calc_3(0.25, 0.25)
sqrt(1+x*exp(-y))
calc_3 <- function(x,y) {
sqrt(1+x*exp(-y))
}
calc_3(0.25, 0.25)
calc_3 <- function(x,y) {
sqrt(1+x*exp(-y))
}
vec <- seq(0,1, 1/4)[-1]
vec <- vec[-2][-3]
do_it <- function(vec){
total <- 0
for (i in seq_along(vec)){
for (j in seq_along(vec)){
total <- sum(total, calc_3(vec[i], vec[j]))
message(total)
}
}
total
}
do_it(vec)
do_it(vec) * 0.25
vec <- seq(0,1, 1/16)[-1]
vec
plot(vec,vec)
1/8
matrix(NA, nrow=4, ncol=4, dimnames=vec)
vec <- list(vec)
matrix(NA, nrow=4, ncol=4, dimnames=vec)
matrix(NA, nrow=4, ncol=4, dimnames=vec[[1]][1:4])
matrix(NA, nrow=4, ncol=4, dimnames=vec[1][1:4])
vec
vec <- unlist(vec)
vec
vec <- seq(0,1, 1/4)
vec
vec <- seq(0,1, 1/16)
logical <- c(FALSE, TRUE, TRUE, TRUE)
vec[logical]
logical <- c(FALSE, FALSE, FALSE, TRUE)
vec[logical]
vec
0.25/2
0.75+0.5
1.25/2
vec <- vec[3:]
vec <- vec[3:length(vec)]
vec
vec[vec%%4 == 0]
vec[vec %/% 4 == 0]
4 %% 4
vec %/% 4 == 0
logical
logical <- c(TRUE, rep(FALSE,3))
logical
vec[logical]
vec <- vec[logical]
do_it(vec) * 0.125
vec
1/16
do_it(vec) * 0.0625
1/64
vec <- seq(0,1, 1/64)
vec
logical
1/8
1/8 * 1/2
vec <- vec[5:length(vec)]
vec
logical <- c(TRUE, rep(FALSE, 7))
logical
vec[logical]
vec <- vec[logical]
vec
1/64
do_it(vec) * 0.015625
1/256
vec <- seq(0,1,1/256)
vec
sqrt(256)
vec <- vec[9:length(vec)]
logical <- c(TRUE, rep(FALSE, 15))
vec <- vec[logical]
do_it(vec) * 0.00390625
sqrt(1024)
1/32
seq(0,1, 1/32)
seq(0,1, 1/1024)
1/256
1/1024
vec <- seq(0,1,1/1024)
logical <- c(TRUE, rep(FALSE, 31))
vec <- vec[17:length(vec)]
vec <- vec[logical]
do_it(vec) * (1/1024)
pi
vec <- seq(0,pi, length.out=2)
vec
vec <- seq(0,pi, length.out=3)
vec
pi/2
?sin
sin(0)
sin(pi)
vec <- seq(0,pi, length.out=5)
vec
vec <- vec[2:length(vec)]
vec
vec <- vec[c(TRUE, FALSE)]
vec
do_it <- function(vec){
total <- 0
for (i in seq_along(vec)){
for (j in seq_along(vec)){
# total <- sum(total, calc_3(vec[i], vec[j]))
# message(total)
total <- sum(sin(vec[i], vec[j]))
}
}
total
}
do_it(vec)
do_it <- function(vec){
total <- 0
for (i in seq_along(vec)){
for (j in seq_along(vec)){
# total <- sum(total, calc_3(vec[i], vec[j]))
# message(total)
total <- sum(sin(vec[i] + vec[j]))
}
}
total
}
do_it(vec)
A <- matrix(c(1,0,7,0,1,-10,-7,-5,1,2,3,-16),3)
A
A %*% matrix(rep(0,3),3)
library(matlib)
Solve(A, matrix(rep(0,3),3))
A <- matrix(c(1,0,0,1,1,0,-1,0,-7,-2,-3,0,2,-1,14),3)
A
Solve(A, matrix(rep(0,3)))
A <- cbind(c(1,0,0,1),c(6,0,0,-6))
A
A <- cbind(A, c(2,-1,1,-1), c(9,-2,2,-12))
A
A <- cbind(A, c(11,-1,1,-10))
A
echelon(A, reduced=TRUE)
echelon(A)
A <- matrix(c(2,9,3,6,0,7,0,3,0,3,0,1,4,-2,0,5),4)
A
det(A)
A <- matrix(c(4,-2,-4,0,2,-3,2,0,-1),3)
A
det(A)
t(diag(3))
diag(diag(3))
matrix(c(0,0,1,0,1,0,1,0,0),3)
det(matrix(c(0,0,1,0,1,0,1,0,0),3))
A <- matrix(c(1,1,2,5,6,8,-6,5,7))
A
nrow(A) <- 3
dim(A) <- 3,3
dim(A) <- (3,3)
dim(A) <- c(3,3)
A
echelon(A)
det(A)
A <- matrix(c(-1,4,6,5,4,5,4,2,0,0,4,2),4)
A
A[,4] < A[,3]
A <- cbind(A, A[,3])
A
A[,3] <- c(5,3,8,5)
A
det(A)
A <- matrix(c(10,-2,0,0,6,5,-2,4,3),3)
A
det(A)
inv(A)
B <- matrix(c(2,2,2,0,1,3,1,4,2),3)
B
det(B)^3
det(B)
shiny::runApp('D:/vscode/Italiano R/app')
test <- read.csv("italian-word-list-verbs.csv")
clean_up <- function(data) {
os <- data[4:nrow(data),1:2]
os_col <- gsub("[0-9*#;!?+]", "" , os[,1])
os[,1] <- os_col
rownames(os) <- 1:nrow(os)
as.matrix(os)
}
os <- clean_up(os)
test <- clean_up(test)
test <- read.csv("italian-word-list-verbs.csv")
test <- clean_up(test)
test <- read.csv("italian-word-list-verbs.csv")
setwd("D:/vscode/Italiano R/app")
test <- read.csv("italian-word-list-verbs.csv")
clean_up <- function(data) {
os <- data[4:nrow(data),1:2]
os_col <- gsub("[0-9*#;!?+]", "" , os[,1])
os[,1] <- os_col
rownames(os) <- 1:nrow(os)
as.matrix(os)
}
test <- clean_up(test)
test[1:4,]
?grepl
grep("able", test)
grepl("able", test)
grep("able", test)
test[959]
test[999]
if (grep("able", test)){
"yes"
}else{
"no"
}
if (sum(grep("able", test))){
"yes"
}else{
"no"
}
if (sum(grep("zable", test))){
"yes"
}else{
"no"
}
